// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StatisticDbContext;

#nullable disable

namespace StatisticDbContext.Migrations
{
    [DbContext(typeof(StatisticContext))]
    [Migration("20240725091751_addItems")]
    partial class addItems
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StatisticDbContext.Models.InventoryModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("count")
                        .HasColumnType("integer");

                    b.Property<int>("item_id")
                        .HasColumnType("integer");

                    b.Property<long>("user_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("item_id");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("StatisticDbContext.Models.ItemModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("asset")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("level")
                        .HasColumnType("integer");

                    b.Property<string>("name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("type")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("StatisticDbContext.Models.StorageModel", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("user_id"));

                    b.Property<long>("aim")
                        .HasColumnType("bigint");

                    b.Property<long>("bonus_coin")
                        .HasColumnType("bigint");

                    b.Property<int>("energy")
                        .HasColumnType("integer");

                    b.Property<long>("hunts")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("last_check_energy")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("main_coin")
                        .HasColumnType("bigint");

                    b.Property<long>("refer_coin")
                        .HasColumnType("bigint");

                    b.Property<long>("shots")
                        .HasColumnType("bigint");

                    b.Property<long>("task_coin")
                        .HasColumnType("bigint");

                    b.HasKey("user_id");

                    b.ToTable("storage", (string)null);
                });

            modelBuilder.Entity("StatisticDbContext.Models.InventoryModel", b =>
                {
                    b.HasOne("StatisticDbContext.Models.ItemModel", "item")
                        .WithMany()
                        .HasForeignKey("item_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("item");
                });
#pragma warning restore 612, 618
        }
    }
}
