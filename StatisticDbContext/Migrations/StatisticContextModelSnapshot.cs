// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StatisticDbContext;

#nullable disable

namespace StatisticDbContext.Migrations
{
    [DbContext(typeof(StatisticContext))]
    partial class StatisticContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StatisticDbContext.Models.ArmyModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("barrack_id")
                        .HasColumnType("integer");

                    b.Property<int>("useType")
                        .HasColumnType("integer");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("barrack_id")
                        .IsUnique();

                    b.ToTable("armies", (string)null);
                });

            modelBuilder.Entity("StatisticDbContext.Models.BarrackModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("hero_id")
                        .HasColumnType("integer");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("hero_id");

                    b.ToTable("barracks", (string)null);
                });

            modelBuilder.Entity("StatisticDbContext.Models.CraftModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("dt_end")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("recire_id")
                        .HasColumnType("integer");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("recire_id");

                    b.ToTable("crafts", (string)null);
                });

            modelBuilder.Entity("StatisticDbContext.Models.HeroModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("asset")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("level")
                        .HasColumnType("integer");

                    b.Property<string>("name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("type")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("id");

                    b.ToTable("heroes", (string)null);

                    b.HasData(
                        new
                        {
                            id = 2,
                            asset = "standart",
                            description = "",
                            level = 1,
                            name = "Младший дружинник",
                            type = "Богатыри"
                        },
                        new
                        {
                            id = 3,
                            asset = "standart",
                            description = "",
                            level = 2,
                            name = "Дружинник",
                            type = "Богатыри"
                        },
                        new
                        {
                            id = 4,
                            asset = "standart",
                            description = "",
                            level = 3,
                            name = "Старший дружинник",
                            type = "Богатыри"
                        },
                        new
                        {
                            id = 5,
                            asset = "standart",
                            description = "",
                            level = 4,
                            name = "Сотник",
                            type = "Богатыри"
                        },
                        new
                        {
                            id = 6,
                            asset = "standart",
                            description = "",
                            level = 5,
                            name = "Старший сотник",
                            type = "Богатыри"
                        },
                        new
                        {
                            id = 7,
                            asset = "standart",
                            description = "",
                            level = 6,
                            name = "Молодой богатырь",
                            type = "Богатыри"
                        },
                        new
                        {
                            id = 8,
                            asset = "standart",
                            description = "",
                            level = 7,
                            name = "Богатырь",
                            type = "Богатыри"
                        },
                        new
                        {
                            id = 9,
                            asset = "standart",
                            description = "",
                            level = 8,
                            name = "Старший богатырь",
                            type = "Богатыри"
                        },
                        new
                        {
                            id = 10,
                            asset = "standart",
                            description = "",
                            level = 9,
                            name = "Витязь",
                            type = "Богатыри"
                        },
                        new
                        {
                            id = 11,
                            asset = "standart",
                            description = "",
                            level = 10,
                            name = "Илья Муромец",
                            type = "Богатыри"
                        },
                        new
                        {
                            id = 12,
                            asset = "standart",
                            description = "",
                            level = 1,
                            name = "Ученик волхва",
                            type = "Волхвы"
                        },
                        new
                        {
                            id = 13,
                            asset = "standart",
                            description = "",
                            level = 2,
                            name = "Младший волхв",
                            type = "Волхвы"
                        },
                        new
                        {
                            id = 14,
                            asset = "standart",
                            description = "",
                            level = 3,
                            name = "Волхв",
                            type = "Волхвы"
                        },
                        new
                        {
                            id = 15,
                            asset = "standart",
                            description = "",
                            level = 4,
                            name = "Старший волхв",
                            type = "Волхвы"
                        },
                        new
                        {
                            id = 16,
                            asset = "standart",
                            description = "",
                            level = 5,
                            name = "Мастер волхвов",
                            type = "Волхвы"
                        },
                        new
                        {
                            id = 17,
                            asset = "standart",
                            description = "",
                            level = 6,
                            name = "Хранитель тайн",
                            type = "Волхвы"
                        },
                        new
                        {
                            id = 18,
                            asset = "standart",
                            description = "",
                            level = 7,
                            name = "Мудрец",
                            type = "Волхвы"
                        },
                        new
                        {
                            id = 19,
                            asset = "standart",
                            description = "",
                            level = 8,
                            name = "Старейшина",
                            type = "Волхвы"
                        },
                        new
                        {
                            id = 20,
                            asset = "standart",
                            description = "",
                            level = 9,
                            name = "Верховный волхв",
                            type = "Волхвы"
                        },
                        new
                        {
                            id = 21,
                            asset = "standart",
                            description = "",
                            level = 10,
                            name = "Великий волхв",
                            type = "Волхвы"
                        },
                        new
                        {
                            id = 22,
                            asset = "standart",
                            description = "",
                            level = 1,
                            name = "Лесовичок",
                            type = "Лесные существа"
                        },
                        new
                        {
                            id = 23,
                            asset = "standart",
                            description = "",
                            level = 2,
                            name = "Лесной дух",
                            type = "Лесные существа"
                        },
                        new
                        {
                            id = 24,
                            asset = "standart",
                            description = "",
                            level = 3,
                            name = "Младший леший",
                            type = "Лесные существа"
                        },
                        new
                        {
                            id = 25,
                            asset = "standart",
                            description = "",
                            level = 4,
                            name = "Леший",
                            type = "Лесные существа"
                        },
                        new
                        {
                            id = 26,
                            asset = "standart",
                            description = "",
                            level = 5,
                            name = "Старший леший",
                            type = "Лесные существа"
                        },
                        new
                        {
                            id = 27,
                            asset = "standart",
                            description = "",
                            level = 6,
                            name = "Мастер леса",
                            type = "Лесные существа"
                        },
                        new
                        {
                            id = 28,
                            asset = "standart",
                            description = "",
                            level = 7,
                            name = "Хранитель леса",
                            type = "Лесные существа"
                        },
                        new
                        {
                            id = 29,
                            asset = "standart",
                            description = "",
                            level = 8,
                            name = "Лесной мудрец",
                            type = "Лесные существа"
                        },
                        new
                        {
                            id = 30,
                            asset = "standart",
                            description = "",
                            level = 9,
                            name = "Лесной старейшина",
                            type = "Лесные существа"
                        },
                        new
                        {
                            id = 31,
                            asset = "standart",
                            description = "",
                            level = 10,
                            name = "Владыка леса",
                            type = "Лесные существа"
                        },
                        new
                        {
                            id = 32,
                            asset = "standart",
                            description = "",
                            level = 1,
                            name = "Маленький домовой",
                            type = "Домовые и духи"
                        },
                        new
                        {
                            id = 33,
                            asset = "standart",
                            description = "",
                            level = 2,
                            name = "Домовой",
                            type = "Домовые и духи"
                        },
                        new
                        {
                            id = 34,
                            asset = "standart",
                            description = "",
                            level = 3,
                            name = "Старший домовой",
                            type = "Домовые и духи"
                        },
                        new
                        {
                            id = 35,
                            asset = "standart",
                            description = "",
                            level = 4,
                            name = "Хранитель дома",
                            type = "Домовые и духи"
                        },
                        new
                        {
                            id = 36,
                            asset = "standart",
                            description = "",
                            level = 5,
                            name = "Мастер оберега",
                            type = "Домовые и духи"
                        },
                        new
                        {
                            id = 37,
                            asset = "standart",
                            description = "",
                            level = 6,
                            name = "Домовой мудрец",
                            type = "Домовые и духи"
                        },
                        new
                        {
                            id = 38,
                            asset = "standart",
                            description = "",
                            level = 7,
                            name = "Домовой старейшина",
                            type = "Домовые и духи"
                        },
                        new
                        {
                            id = 39,
                            asset = "standart",
                            description = "",
                            level = 8,
                            name = "Великий хранитель",
                            type = "Домовые и духи"
                        },
                        new
                        {
                            id = 40,
                            asset = "standart",
                            description = "",
                            level = 9,
                            name = "Дух дома",
                            type = "Домовые и духи"
                        },
                        new
                        {
                            id = 41,
                            asset = "standart",
                            description = "",
                            level = 10,
                            name = "Домовой маг",
                            type = "Домовые и духи"
                        },
                        new
                        {
                            id = 42,
                            asset = "standart",
                            description = "",
                            level = 1,
                            name = "Младший помощник",
                            type = "Сказочные персонажи"
                        },
                        new
                        {
                            id = 43,
                            asset = "standart",
                            description = "",
                            level = 2,
                            name = "Помощник",
                            type = "Сказочные персонажи"
                        },
                        new
                        {
                            id = 44,
                            asset = "standart",
                            description = "",
                            level = 3,
                            name = "Мудрый помощник",
                            type = "Сказочные персонажи"
                        },
                        new
                        {
                            id = 45,
                            asset = "standart",
                            description = "",
                            level = 4,
                            name = "Лихо одноглазое",
                            type = "Сказочные персонажи"
                        },
                        new
                        {
                            id = 46,
                            asset = "standart",
                            description = "",
                            level = 5,
                            name = "Соловей-разбойник",
                            type = "Сказочные персонажи"
                        },
                        new
                        {
                            id = 47,
                            asset = "standart",
                            description = "",
                            level = 6,
                            name = "Баба-яга",
                            type = "Сказочные персонажи"
                        },
                        new
                        {
                            id = 48,
                            asset = "standart",
                            description = "",
                            level = 7,
                            name = "Змей Горыныч",
                            type = "Сказочные персонажи"
                        },
                        new
                        {
                            id = 49,
                            asset = "standart",
                            description = "",
                            level = 8,
                            name = "Кощей Бессмертный",
                            type = "Сказочные персонажи"
                        },
                        new
                        {
                            id = 50,
                            asset = "standart",
                            description = "",
                            level = 9,
                            name = "Ведунья",
                            type = "Сказочные персонажи"
                        },
                        new
                        {
                            id = 51,
                            asset = "standart",
                            description = "",
                            level = 10,
                            name = "Верховная колдунья",
                            type = "Сказочные персонажи"
                        });
                });

            modelBuilder.Entity("StatisticDbContext.Models.InventoryModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("army_id")
                        .HasColumnType("integer");

                    b.Property<int>("item_id")
                        .HasColumnType("integer");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("army_id");

                    b.HasIndex("item_id");

                    b.ToTable("inventory", (string)null);
                });

            modelBuilder.Entity("StatisticDbContext.Models.ItemModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("asset")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("level")
                        .HasColumnType("integer");

                    b.Property<string>("name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("type")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("id");

                    b.ToTable("items", (string)null);

                    b.HasData(
                        new
                        {
                            id = 1,
                            asset = "standart",
                            description = "Тяжелая деревянная дубина, простое, но эффективное оружие для ближнего боя.",
                            level = 1,
                            name = "Дубина дружинника",
                            type = "gun"
                        },
                        new
                        {
                            id = 2,
                            asset = "standart",
                            description = "Копьё, используемое для охоты на крупную дичь, украшенное перьями и резьбой.",
                            level = 2,
                            name = "Копьё охотника",
                            type = "gun"
                        },
                        new
                        {
                            id = 4,
                            asset = "standart",
                            description = "Лесное оружие, созданное из волшебного дерева и камня.",
                            level = 4,
                            name = "Секира лешего",
                            type = "gun"
                        },
                        new
                        {
                            id = 3,
                            asset = "standart",
                            description = "Топор с укрепленным лезвием, используемый в бою.",
                            level = 3,
                            name = "Боевой топор воина",
                            type = "gun"
                        },
                        new
                        {
                            id = 5,
                            asset = "standart",
                            description = "Длинное оружие с лезвием, используемое для защиты священных мест.",
                            level = 5,
                            name = "Алебарда старейшины",
                            type = "gun"
                        },
                        new
                        {
                            id = 6,
                            asset = "standart",
                            description = "Меч с широким лезвием, украшенный символами силы и отваги.",
                            level = 6,
                            name = "Широкий меч витязя",
                            type = "gun"
                        },
                        new
                        {
                            id = 7,
                            asset = "standart",
                            description = "Легендарный меч, передающийся из поколения в поколение среди богатырей.",
                            level = 7,
                            name = "Клинок богатыря",
                            type = "gun"
                        },
                        new
                        {
                            id = 8,
                            asset = "standart",
                            description = "Тяжелый молот, выкованный в священных кузницах.",
                            level = 8,
                            name = "Боевой молот кузнеца",
                            type = "gun"
                        },
                        new
                        {
                            id = 9,
                            asset = "standart",
                            description = "Изогнутая сабля, используемая воинами степей для быстрого и точного удара.",
                            level = 9,
                            name = "Сабля степного воителя",
                            type = "gun"
                        },
                        new
                        {
                            id = 10,
                            asset = "standart",
                            description = "Могучий клинок, которым пользовался сам Илья Муромец.",
                            level = 10,
                            name = "Клюв Ильи Муромца",
                            type = "gun"
                        },
                        new
                        {
                            id = 11,
                            asset = "standart",
                            description = "Кинжал, заряженный магией и способный наносить удары с ядовитым эффектом.",
                            level = 11,
                            name = "Зачарованный кинжал ведьмы",
                            type = "gun"
                        },
                        new
                        {
                            id = 12,
                            asset = "standart",
                            description = "Волшебный посох, позволяющий использовать силы природы и древних духов.",
                            level = 12,
                            name = "Посох волхва",
                            type = "gun"
                        },
                        new
                        {
                            id = 14,
                            asset = "standart",
                            description = "Жезл, контролирующий стихии огня, воды, земли и воздуха.",
                            level = 13,
                            name = "Жезл стихий",
                            type = "gun"
                        },
                        new
                        {
                            id = 15,
                            asset = "standart",
                            description = "Лук, сделанный из костей змия, стреляющий огненными стрелами.",
                            level = 14,
                            name = "Лук змия Горыныча",
                            type = "gun"
                        },
                        new
                        {
                            id = 16,
                            asset = "standart",
                            description = "Легендарный клинок, наделенный бессмертной силой, с которым нет равных.",
                            level = 15,
                            name = "Клинок Кощея Бессмертного",
                            type = "gun"
                        },
                        new
                        {
                            id = 17,
                            asset = "standart",
                            description = "Шкура мелкого животного испорченная выстрелом",
                            level = 1,
                            name = "Пушнина испорченная",
                            type = "material"
                        },
                        new
                        {
                            id = 18,
                            asset = "standart",
                            description = "Шкура животного обычного качества",
                            level = 1,
                            name = "Пушнина обычная",
                            type = "material"
                        },
                        new
                        {
                            id = 19,
                            asset = "standart",
                            description = "Шкура животного отличного качества",
                            level = 2,
                            name = "Пушнина царская",
                            type = "material"
                        },
                        new
                        {
                            id = 20,
                            asset = "standart",
                            description = "Кусок упавшего дерева",
                            level = 1,
                            name = "Бревно",
                            type = "material"
                        },
                        new
                        {
                            id = 21,
                            asset = "standart",
                            description = "Кусок железной руды",
                            level = 1,
                            name = "Железо",
                            type = "material"
                        });
                });

            modelBuilder.Entity("StatisticDbContext.Models.RecipeIngredientModel", b =>
                {
                    b.Property<int>("recipe_id")
                        .HasColumnType("integer");

                    b.Property<int>("ingredient_id")
                        .HasColumnType("integer");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.HasKey("recipe_id", "ingredient_id");

                    b.HasIndex("ingredient_id");

                    b.ToTable("ingredients", (string)null);

                    b.HasData(
                        new
                        {
                            recipe_id = 1,
                            ingredient_id = 20,
                            quantity = 1
                        },
                        new
                        {
                            recipe_id = 2,
                            ingredient_id = 1,
                            quantity = 1
                        },
                        new
                        {
                            recipe_id = 2,
                            ingredient_id = 20,
                            quantity = 1
                        },
                        new
                        {
                            recipe_id = 3,
                            ingredient_id = 2,
                            quantity = 1
                        },
                        new
                        {
                            recipe_id = 3,
                            ingredient_id = 20,
                            quantity = 1
                        },
                        new
                        {
                            recipe_id = 3,
                            ingredient_id = 21,
                            quantity = 1
                        },
                        new
                        {
                            recipe_id = 4,
                            ingredient_id = 3,
                            quantity = 1
                        },
                        new
                        {
                            recipe_id = 4,
                            ingredient_id = 20,
                            quantity = 1
                        },
                        new
                        {
                            recipe_id = 4,
                            ingredient_id = 21,
                            quantity = 1
                        },
                        new
                        {
                            recipe_id = 5,
                            ingredient_id = 4,
                            quantity = 1
                        },
                        new
                        {
                            recipe_id = 5,
                            ingredient_id = 20,
                            quantity = 1
                        },
                        new
                        {
                            recipe_id = 5,
                            ingredient_id = 21,
                            quantity = 1
                        });
                });

            modelBuilder.Entity("StatisticDbContext.Models.RecipeModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("craft_time")
                        .HasColumnType("integer")
                        .HasColumnName("craft_time");

                    b.Property<string>("crafting_station")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("crafting_station");

                    b.Property<int>("item_id")
                        .HasColumnType("integer")
                        .HasColumnName("item_id");

                    b.HasKey("id");

                    b.HasIndex("item_id");

                    b.ToTable("recipes", (string)null);

                    b.HasData(
                        new
                        {
                            id = 1,
                            craft_time = 30,
                            crafting_station = "forge",
                            item_id = 1
                        },
                        new
                        {
                            id = 2,
                            craft_time = 30,
                            crafting_station = "forge",
                            item_id = 2
                        },
                        new
                        {
                            id = 3,
                            craft_time = 30,
                            crafting_station = "forge",
                            item_id = 3
                        },
                        new
                        {
                            id = 4,
                            craft_time = 30,
                            crafting_station = "forge",
                            item_id = 4
                        },
                        new
                        {
                            id = 5,
                            craft_time = 30,
                            crafting_station = "forge",
                            item_id = 5
                        });
                });

            modelBuilder.Entity("StatisticDbContext.Models.StorageModel", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("user_id"));

                    b.Property<long>("aim")
                        .HasColumnType("bigint");

                    b.Property<long>("bonus_coin")
                        .HasColumnType("bigint");

                    b.Property<int>("energy")
                        .HasColumnType("integer");

                    b.Property<long>("hunts")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("last_check_energy")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("main_coin")
                        .HasColumnType("bigint");

                    b.Property<long>("refer_coin")
                        .HasColumnType("bigint");

                    b.Property<long>("shots")
                        .HasColumnType("bigint");

                    b.Property<long>("task_coin")
                        .HasColumnType("bigint");

                    b.HasKey("user_id");

                    b.ToTable("storage", (string)null);
                });

            modelBuilder.Entity("StatisticDbContext.Models.ArmyModel", b =>
                {
                    b.HasOne("StatisticDbContext.Models.BarrackModel", "barrack")
                        .WithOne("army")
                        .HasForeignKey("StatisticDbContext.Models.ArmyModel", "barrack_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("barrack");
                });

            modelBuilder.Entity("StatisticDbContext.Models.BarrackModel", b =>
                {
                    b.HasOne("StatisticDbContext.Models.HeroModel", "hero")
                        .WithMany()
                        .HasForeignKey("hero_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hero");
                });

            modelBuilder.Entity("StatisticDbContext.Models.CraftModel", b =>
                {
                    b.HasOne("StatisticDbContext.Models.RecipeModel", "recipe")
                        .WithMany()
                        .HasForeignKey("recire_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("recipe");
                });

            modelBuilder.Entity("StatisticDbContext.Models.InventoryModel", b =>
                {
                    b.HasOne("StatisticDbContext.Models.ArmyModel", "army")
                        .WithMany("equip")
                        .HasForeignKey("army_id");

                    b.HasOne("StatisticDbContext.Models.ItemModel", "item")
                        .WithMany()
                        .HasForeignKey("item_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("army");

                    b.Navigation("item");
                });

            modelBuilder.Entity("StatisticDbContext.Models.RecipeIngredientModel", b =>
                {
                    b.HasOne("StatisticDbContext.Models.ItemModel", "ingredient")
                        .WithMany()
                        .HasForeignKey("ingredient_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StatisticDbContext.Models.RecipeModel", "recipe")
                        .WithMany("ingredients")
                        .HasForeignKey("recipe_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_recipe_ingredients_recipes_recipe_id");

                    b.Navigation("ingredient");

                    b.Navigation("recipe");
                });

            modelBuilder.Entity("StatisticDbContext.Models.RecipeModel", b =>
                {
                    b.HasOne("StatisticDbContext.Models.ItemModel", "item")
                        .WithMany()
                        .HasForeignKey("item_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_recipes_items_item_id");

                    b.Navigation("item");
                });

            modelBuilder.Entity("StatisticDbContext.Models.ArmyModel", b =>
                {
                    b.Navigation("equip");
                });

            modelBuilder.Entity("StatisticDbContext.Models.BarrackModel", b =>
                {
                    b.Navigation("army");
                });

            modelBuilder.Entity("StatisticDbContext.Models.RecipeModel", b =>
                {
                    b.Navigation("ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
